name: Terraform Safe Destroy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    name: Terraform Destroy with Dependency Order
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: |
          terraform init
          terraform workspace select default || terraform workspace new default

      # PHASE 1: Destroy dependent resources (EC2, NAT, EIP, etc.)
      - name: Destroy Compute & Network Interfaces
        run: |
          terraform destroy \
            -target=aws_instance.my_instance \
            -target=aws_nat_gateway.my_nat \
            -target=aws_eip.my_eip \
            -target=aws_network_interface.my_eni \
            -auto-approve || true

      # PHASE 2: Destroy subnet, route tables, internet gateway
      - name: Destroy Subnet-related Networking
        run: |
          terraform destroy \
            -target=aws_route_table_association.public_rta \
            -target=aws_route_table.public_rt \
            -target=aws_subnet.subnet1 \
            -target=aws_subnet.subnet2 \
            -target=aws_internet_gateway.igw \
            -auto-approve || true

      # PHASE 3: Destroy remaining resources (VPC, SGs, etc.)
      - name: Destroy Remaining Infrastructure
        run: terraform destroy -auto-approve
