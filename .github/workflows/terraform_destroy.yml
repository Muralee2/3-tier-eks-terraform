name: Terraform Safe Destroy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    name: Terraform Destroy with Dependency Cleanup
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: |
          terraform init
          terraform workspace select default || terraform workspace new default

      # üßπ Pre-cleanup: Disassociate EIPs, delete ENIs and NATs
      - name: AWS Pre-Destroy Cleanup (EIPs, ENIs, NATs)
        run: |
          echo "üîç Disassociating Elastic IPs..."
          for assoc_id in $(aws ec2 describe-addresses --region ap-south-1 --query "Addresses[?AssociationId!=null].AssociationId" --output text); do
            echo "‚û§ Disassociating $assoc_id"
            aws ec2 disassociate-address --association-id "$assoc_id" --region ap-south-1 || true
          done

          echo "üßπ Deleting unattached ENIs..."
          for eni_id in $(aws ec2 describe-network-interfaces --region ap-south-1 --query "NetworkInterfaces[?Status=='available'].NetworkInterfaceId" --output text); do
            echo "‚û§ Deleting ENI $eni_id"
            aws ec2 delete-network-interface --network-interface-id "$eni_id" --region ap-south-1 || true
          done

          echo "üß® Deleting NAT Gateways..."
          for nat_id in $(aws ec2 describe-nat-gateways --region ap-south-1 --query "NatGateways[?State!='deleted'].NatGatewayId" --output text); do
            echo "‚û§ Deleting NAT Gateway $nat_id"
            aws ec2 delete-nat-gateway --nat-gateway-id "$nat_id" --region ap-south-1 || true
          done

      # PHASE 1: Destroy EC2, NAT, EIPs, ENIs
      - name: Destroy Compute & Network Interfaces
        run: |
          terraform destroy \
            -target=aws_instance.my_instance \
            -target=aws_nat_gateway.my_nat \
            -target=aws_eip.my_eip \
            -target=aws_network_interface.my_eni \
            -auto-approve || true

      # PHASE 2: Destroy subnets, route tables, internet gateway
      - name: Destroy Subnet-related Networking
        run: |
          terraform destroy \
            -target=aws_route_table_association.public_rta \
            -target=aws_route_table.public_rt \
            -target=aws_subnet.subnet1 \
            -target=aws_subnet.subnet2 \
            -target=aws_internet_gateway.igw \
            -auto-approve || true

      # PHASE 3: Destroy remaining infrastructure
      - name: Destroy Remaining Infrastructure
        run: terraform destroy -auto-approve
